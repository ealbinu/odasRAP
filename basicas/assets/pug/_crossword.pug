- var vmcount = 0

mixin crosswordmod(offsetvm, width, height, horizontales, verticales, test)
    - var spaces = []
    - var coords = new Map
    - vmcount = offsetvm
    


    each hz in horizontales
        - var word = hz[3]
        - var letters = word.split('')
        - var wordX = hz[0]
        - var wordY = hz[1]
        - var example = hz[4]
        - spaces.push([hz[0], hz[1], hz[2]])
        - coords.set(wordX+','+wordY, {letter: hz[2], vm: null, type: 'name', dir:'hor'})
        each let,index in letters
            if example
                - coords.set((wordX+index+1)+','+wordY, {letter: let, vm: null, type: 'example'})
            else
                if let==' '
                    - coords.set((wordX+index+1)+','+wordY, {letter: let, vm: null, type: 'space'})
                else    
                    - coords.set((wordX+index+1)+','+wordY, {letter: let, vm: vmcount, type: 'letter'})
                    - vmcount++
        
    each hz in verticales
        - var word = hz[3]
        - var letters = word.split('')
        - var wordX = hz[0]
        - var wordY = hz[1]
        - var example = hz[4]
        - spaces.push([hz[0], hz[1], hz[2]])
        if !coords.get(wordX+','+wordY)
            - coords.set(wordX+','+wordY, {letter: hz[2], vm: null, type: 'name', dir:'ver'})
        each let,index in letters
            if example
                if !coords.get(wordX+','+(wordY+index+1))
                    - coords.set(wordX+','+(wordY+index+1), {letter: let, vm: null, type: 'example'})
            else
                if let==' '
                    if !coords.get(wordX+','+(wordY+index+1))
                        - coords.set(wordX+','+(wordY+index+1), {letter: let, vm: null, type: 'space'})
                else    
                    if !coords.get(wordX+','+(wordY+index+1))
                        - coords.set(wordX+','+(wordY+index+1), {letter: let, vm: vmcount, type: 'letter'})
                        - vmcount++

     

    .crowsswordmod
        -for(y=0; y<height; y++)
            - for(x=0; x<width; x++)
                // GRID
                .box(class='x'+(x+1)+' '+'y'+(y+1))
                    - var coo =  (x+1)+','+(y+1)
                    - var let = coords.get(coo)
                    if let
                        if let.type == 'name' 
                            div.number(class=let.dir) #{let.letter}
                        if let.type == 'example' 
                            div.cell.example #{let.letter}
                        if let.type == 'space' 
                            div.space #{let.letter}
                        if let.type == 'letter' && !test
                            - var vmodel = 'd["soup'+let.vm+'"]'
                            inputbox(v-model=vmodel :ref="refCount()" @isright="right++" answer=let.letter type="text" placeh="-")
                        if let.type == 'letter' && test
                            div #{let.letter}<sup>#{let.vm}</sup>
                            



//PUG
    - var hor = []
    - var ver = []
    //[x,y,code,word, isexample]
    - hor.push([1, 3, '1', 'PERISCOPIO'])
    - hor.push([3, 6, '2', 'LUZ', true]) //is example
    - ver.push([2, 2, '4', 'PLANO'])
    //v-modelcount, width, height, horizontalwords, verticalwords
    //v-modelcount, width, height, horizontalwords, verticalwords , test:true para modo debug
    +crosswordmod(0, 11,11, hor, ver)

//CSS
    .crowsswordmod .box {
        width: 6.666%;
        min-height: 30px;
    }