include ../../assets/pug/_head
include ../../assets/pug/_scripts

- title = ''

<!DOCTYPE html>
html(lang="es")
    +head
        style.
            .balanza {
                width: 320px;
                align-items: flex-start;
                text-align: center;
            }
            .balanza .barra {
                width: 220%;
                margin-left: -60%;
                height: 8px;
                border: 2px solid #2C2827;
                background: #D2DB30;
                box-sizing: border-box;
                margin-bottom: -18%;
                position: relative;
                z-index: 2;
                transform: rotate(0);
                transition: transform 0.5s;
            }
            .balanza .base {
                position: relative;
                z-index: 3;
            }
            .balanza .plato {
                position: relative;
                z-index: 1;
                height: 100%;
            }
            .balanza .plato > img {
                position: relative;
                z-index: 1;
            }
            .balanza .plato .drop {
                display: flex;
                justify-content: center;
                position: absolute;
                bottom: 6%;
                z-index: 0;
                width: 100%;
                min-height: 40%;
            }
            .balanza .plato .drop img {
                width: 45%;
                margin: 0 -12%;
            }
            .balanza .plato .drop img:nth-child(1),
            .balanza .plato .drop img:nth-child(3) {
                margin-top: -5%;
            }
            .balanza .bl,
            .balanza .br {
                margin-top: 0;
                transition: margin 0.5s;
            }
            .balanza.left .barra {
                transform: rotate(-10deg);
                transition: transform 0.5s;
            }
            .balanza.left .bl,
            .balanza.left .br {
                transition: margin 0.5s;
            }
            .balanza.left .bl {
                margin-top: 7%;
            }
            .balanza.left .br {
                margin-top: -4%;
            }
            .balanza.right .barra {
                transform: rotate(10deg);
                transition: transform 0.5s;
            }
            .balanza.right .bl,
            .balanza.right .br {
                transition: margin 0.5s;
            }
            .balanza.right .br {
                margin-top: 7%;
            }
            .balanza.right .bl {
                margin-top: -4%;
            }
            .frutas {
                min-height: 100px;
            }
            [wascloned] {
                display: none;
            }
            .drag {
                width: auto;
                height: auto;
                margin: 6px;
            }
            .drag img {
                min-width: 20px;
            }
            .drag .platano {
                max-width: 60px;
            }
            .drag .manzana {
                max-width: 34px;
            }
            .drag .melon {
                max-width: 70px;
            }
            .drag .sandia {
                max-width: 100px;
            }
            .drag .pera {
                max-width: 38px;
            }


    body
        #app
            // START
            scene(v-if="currentScene==0" :key="0" start-scene @completed="sceneCompleted")

            // SCENES
            scene(v-if="currentScene==1" :key="1" :score="scoreInScene" :temporals="temporals" alloks alloks-sound="../../assets/asound/bienhecho_mujer.mp3" @completed="sceneCompleted" :devmode="$devmode" :answers="1" scene-color="#ED1C25" @loaded="resetvals")
                info(type="dragdrop" title=title text="Coloca las frutas que sean necesarias para que la balanza tenga el mismo peso." textaudio="s/instruccion1.mp3" :autoplay="true")
                activity
                    .row.w100
                        .balanza.row(:class="temps.pos[temps.balance]")
                            .w30.plato.bl
                                img(src="i/balanzabox.png").w100
                                .drop(data="fr" droptimes="multiple")
                            .w30
                                .barra
                                .base: img(src="i/balanza.png").w100
                            .w30.plato.br
                                img(src="i/balanzabox.png").w100
                                .drop
                                    img(src="i/platano.png")
                                    img(src="i/platano.png")
                                    img(src="i/platano.png")
                    .row.w100.wrap.frutas
                        template(v-for="(i, index) in [['platano',1], ['platano',1], ['platano',1]]")
                            drag(ref="a1" data="fr" dropzone=".drop" append-clone extval @dropped="addWeight(3, i[1])"): img(:src="'i/'+i[0]+'.png'" :class="i[0]")
                    button(@click="validateWeight('a1')").button.big.animate__animated.animate__flip Verificar
            
            
            // SCENES
            scene(v-if="currentScene==2" :key="2" :score="scoreInScene" :temporals="temporals" alloks alloks-sound="../../assets/asound/bienhecho_mujer.mp3" @completed="sceneCompleted" :devmode="$devmode" :answers="1" scene-color="#ED1C25" @loaded="resetvals")
                info(type="dragdrop" title=title text="Coloca las frutas que sean necesarias para que la balanza tenga el mismo peso." textaudio="s/instruccion1.mp3" :autoplay="false")
                activity
                    .row.w100
                        .balanza.row(:class="temps.pos[temps.balance]")
                            .w30.plato.bl
                                img(src="i/balanzabox.png").w100
                                .drop(data="fr" droptimes="multiple")
                            .w30
                                .barra
                                .base: img(src="i/balanza.png").w100
                            .w30.plato.br
                                img(src="i/balanzabox.png").w100
                                .drop
                                    img(src="i/melon.png")
                    .row.w100.wrap.frutas
                        template(v-for="(i, index) in [['melon',1], ['melon',1], ['melon',1]]")
                            drag(ref="a2" data="fr" dropzone=".drop" append-clone extval @dropped="addWeight(1, i[1])"): img(:src="'i/'+i[0]+'.png'" :class="i[0]")
                    button(@click="validateWeight('a2')").button.big.animate__animated.animate__flip Verificar
            
            
            // SCENES
            scene(v-if="currentScene==3" :key="3" :score="scoreInScene" :temporals="temporals" alloks alloks-sound="../../assets/asound/bienhecho_mujer.mp3" @completed="sceneCompleted" :devmode="$devmode" :answers="1" scene-color="#ED1C25" @loaded="resetvals")
                info(type="dragdrop" title=title text="Coloca las frutas que sean necesarias para que la balanza tenga el mismo peso." textaudio="s/instruccion1.mp3" :autoplay="false")
                activity
                    .row.w100
                        .balanza.row(:class="temps.pos[temps.balance]")
                            .w30.plato.bl
                                img(src="i/balanzabox.png").w100
                                .drop(data="fr" droptimes="multiple")
                            .w30
                                .barra
                                .base: img(src="i/balanza.png").w100
                            .w30.plato.br
                                img(src="i/balanzabox.png").w100
                                .drop
                                    img(src="i/sandia.png")
                    .row.w100.wrap.frutas
                        template(v-for="(i, index) in [['sandia',1], ['sandia',1], ['sandia',1]]")
                            drag(ref="a3" data="fr" dropzone=".drop" append-clone extval @dropped="addWeight(1, i[1])"): img(:src="'i/'+i[0]+'.png'" :class="i[0]")
                    button(@click="validateWeight('a3')").button.big.animate__animated.animate__flip Verificar
            
            
            
            
            // SCENES
            scene(v-if="currentScene==4" :key="4" :score="scoreInScene" :temporals="temporals" alloks alloks-sound="../../assets/asound/bienhecho_mujer.mp3" @completed="sceneCompleted" :devmode="$devmode" :answers="1" scene-color="#ED1C25" @loaded="resetvals")
                info(type="dragdrop" title=title text="Coloca las frutas que sean necesarias para que la balanza tenga el mismo peso." textaudio="s/instruccion1.mp3" :autoplay="false")
                activity
                    .row.w100
                        .balanza.row(:class="temps.pos[temps.balance]")
                            .w30.plato.bl
                                img(src="i/balanzabox.png").w100
                                .drop(data="fr" droptimes="multiple")
                            .w30
                                .barra
                                .base: img(src="i/balanza.png").w100
                            .w30.plato.br
                                img(src="i/balanzabox.png").w100
                                .drop
                                    img(src="i/manzana.png")
                                    img(src="i/manzana.png")
                    .row.w100.wrap.frutas
                        template(v-for="(i, index) in [['manzana',1], ['manzana',1], ['manzana',1], ['manzana',1]]")
                            drag(ref="a4" data="fr" dropzone=".drop" append-clone extval @dropped="addWeight(2, i[1])"): img(:src="'i/'+i[0]+'.png'" :class="i[0]")
                    button(@click="validateWeight('a4')").button.big.animate__animated.animate__flip Verificar
            
            
            
            
            // SCENES
            scene(v-if="currentScene==5" :key="5" :score="scoreInScene" :temporals="temporals" alloks alloks-sound="../../assets/asound/bienhecho_mujer.mp3" @completed="sceneCompleted" :devmode="$devmode" :answers="1" scene-color="#ED1C25" @loaded="resetvals")
                info(type="dragdrop" title=title text="Coloca las frutas que sean necesarias para que la balanza tenga el mismo peso." textaudio="s/instruccion1.mp3" :autoplay="false")
                activity
                    .row.w100
                        .balanza.row(:class="temps.pos[temps.balance]")
                            .w30.plato.bl
                                img(src="i/balanzabox.png").w100
                                .drop(data="fr" droptimes="multiple")
                            .w30
                                .barra
                                .base: img(src="i/balanza.png").w100
                            .w30.plato.br
                                img(src="i/balanzabox.png").w100
                                .drop
                                    img(src="i/platano.png")
                                    img(src="i/platano.png")
                                    img(src="i/pera.png")
                    .row.w100.wrap.frutas
                        template(v-for="(i, index) in [['pera',1], ['pera',1], ['pera',1], ['platano',1], ['platano',1], ['platano',1], ['platano',1], ['platano',1]]")
                            drag(ref="a5" data="fr" dropzone=".drop" append-clone extval @dropped="addWeight(3, i[1])"): img(:src="'i/'+i[0]+'.png'" :class="i[0]")
                    button(@click="validateWeight('a5')").button.big.animate__animated.animate__flip Verificar
            
            
            // SCENES
            scene(v-if="currentScene==6" :key="6" :score="scoreInScene" :temporals="temporals" alloks alloks-sound="../../assets/asound/bienhecho_mujer.mp3" @completed="sceneCompleted" :devmode="$devmode" :answers="1" scene-color="#ED1C25" @loaded="resetvals")
                info(type="dragdrop" title=title text="Coloca las frutas que sean necesarias para que la balanza tenga el mismo peso." textaudio="s/instruccion1.mp3" :autoplay="false")
                activity
                    .row.w100
                        .balanza.row(:class="temps.pos[temps.balance]")
                            .w30.plato.bl
                                img(src="i/balanzabox.png").w100
                                .drop(data="fr" droptimes="multiple")
                            .w30
                                .barra
                                .base: img(src="i/balanza.png").w100
                            .w30.plato.br
                                img(src="i/balanzabox.png").w100
                                .drop
                                    img(src="i/manzana.png")
                                    img(src="i/manzana.png")
                                    img(src="i/manzana.png")
                                    img(src="i/pera.png")
                    .row.w100.wrap.frutas
                        template(v-for="(i, index) in [ ['manzana',1],['manzana',1],['manzana',1],['manzana',1],['manzana',1], ['pera',1],['pera',1],['pera',1], ]")
                            drag(ref="a6" data="fr" dropzone=".drop" append-clone extval @dropped="addWeight(4, i[1])"): img(:src="'i/'+i[0]+'.png'" :class="i[0]")
                    button(@click="validateWeight('a6')").button.big.animate__animated.animate__flip Verificar
            
            
  
                
            // END
            scene(v-if="currentScene==7" :key="7" end-scene :final-data="finalData")
        
        +scripts
            script.

                app.$devmode = false
                app.$set(app.temps, 'pos', ['right', ' ', 'left'])
                app.$set(app.temps, 'balance', 0)
                
                app.$set(app.temps, 'weight', 0)


                app.addWeight = function (rightweight, fruitweight){
                    app.temps.weight = app.temps.weight + fruitweight
                    if(app.temps.weight < rightweight){
                        app.temps.balance = 0
                    } else if(app.temps.weight == rightweight) {
                        app.temps.balance = 1
                    } else {
                        app.temps.balance = 2
                    }
                }

                app.validateWeight = function (refs){
                    if(app.temps.balance == 1){
                        EventBus.$emit('isok')
                    } else {
                        s_error.play()
                        for(i in app.$refs[refs]) {
                            let dr = app.$refs[refs][i]
                            dr.undroppableFn()
                            dr.backToInitPos()
                            dr.removeClones()
                            app.resetvals()
                        }
                    }
                }

                app.resetvals = function () {
                    app.temps.balance = 0
                    app.temps.weight = 0
                }

                

                /*
                setInterval(function (){
                    app.temps.balance++
                    if(app.temps.balance>2){
                        app.temps.balance = 0
                    }
                }, 1000)
                */
                
                app.currentScene = 0
                app.scenesCount = 6